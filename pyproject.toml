[build-system]
requires = ["setuptools>=42.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "myjobspyai"
version = "1.0.0"
description = "A job search and analysis tool with AI-powered matching"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Kenneth", email = "kenneth@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Utilities",
]

# Core dependencies
dependencies = [
    # Core
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    
    # Observability
    "opentelemetry-api>=1.22.0",
    "opentelemetry-sdk>=1.22.0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.22.0",
    "opentelemetry-exporter-otlp-proto-http>=1.22.0",
    "opentelemetry-instrumentation-logging>=0.43b0",
    
    # Job Processing
    "python-jobspy",
    "pandas",
    "numpy>2.0.0",  # Lock to 1.x for compatibility
    
    # Document Processing
    "python-docx>=1.1.0",
    "pypdf>=5.5.0",
    "textract==1.6.3",  # Pinned to specific version for stability
    "extract-msg",  # Pinned to avoid .* version specifier
    "six",  # Required for textract and other dependencies
    
    # Utilities
    "rich>=14.0.0",
    "colorama>=0.4.6",
    "tenacity>=9.1.2",
    "jinja2>=3.1.0",
    "PyYAML>=6.0.0",
    "httpx>=0.24.0",
    "tqdm>=4.65.0",
    "python-dateutil>=2.8.2",
    
    # Vector Database
    "pymilvus>=2.3.0",
    
    # Embeddings and RAG
    "sentence-transformers>=2.2.0",
    "faiss-cpu>=1.7.0",
    "chromadb>=0.4.0",
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "langgraph>=0.1.0",
]

# Optional dependencies for different LLM providers
[project.optional-dependencies]
# All LLM backends
all = [
    "openai>=1.0.0",
    "tiktoken>=0.5.0",
    "google-generativeai>=0.3.0",
    "google-ai-generativelanguage>=0.6.15",
    "ollama>=0.2.0",
]

# OpenAI-specific dependencies
openai = [
    "openai>=1.0.0",
    "tiktoken>=0.5.0"
]

# Google Gemini dependencies
gemini = [
    "google-generativeai>=0.3.0",
    "google-ai-generativelanguage>=0.6.15"
]

# Ollama dependencies
ollama = [
    "ollama>=0.2.0"
]

# Development dependencies
dev = [
    # Testing
    "pytest>=8.3.4",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    
    # Linting and formatting
    "black>=25.1.0",
    "isort>=6.0.1",
    "mypy>=1.6.1",
    "pylint>=3.3.7",
    "pylama>=8.4.0",
    "bandit>=1.7.5",
    "pydocstyle>=6.3.0",
    "prospector>=1.10.2",
    
    # Development tools
    "pre-commit>=4.2.0",
    "pytrail>=0.1.0",
    "scalene>=1.5.0",
]

# Documentation dependencies
docs = [
    "sphinx>=8.2.3",
    "sphinx-rtd-theme>=3.0.2",
    "sphinx-autodoc-typehints>=3.2.0",
    "myst-parser>=4.0.1",
]

# Linting dependencies
lint = [
    "pylint>=3.3.7",
    "pylama>=8.4.0",
    "bandit>=1.7.5",
    "pydocstyle>=6.3.0",
    "mypy>=1.6.1",
    "prospector>=1.10.2",
]

# Testing dependencies
test = [
    "pytest>=8.3.4",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
]

[project.urls]
Homepage = "https://github.com/kasnycdev/myjobspyai"
Documentation = "https://myjobspyai.readthedocs.io"
Issues = "https://github.com/kasnycdev/myjobspyai/issues"
Source = "https://github.com/kasnycdev/myjobspyai"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true

[tool.pylint]
max-line-length = 88
indent-string = "    "

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "-v --cov=myjobspyai --cov-report=term-missing"
asyncio_mode = "auto"